version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch_ready:
    image: curlimages/curl:latest
    command: sh -c 'while [ "$$(curl -s -o /dev/null -w ''%{http_code}'' http://elasticsearch:9200)" != "200" ]; do sleep 5; done && echo "Elasticsearch is ready!"'
    depends_on:
      - elasticsearch

  ollama:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama

  fastapi:
    build:
      context: ..
      dockerfile: docker/Dockerfile.fastapi
    ports:
      - "8000:8000"
    depends_on:
      elasticsearch_ready:
        condition: service_completed_successfully
      ollama:
        condition: service_started
    environment:
      - ES_HOST=http://elasticsearch:9200
      - OLLAMA_URL=http://ollama:11434/api/generate
      - OLLAMA_TIMEOUT=240  
      - DATABASE_URL=postgresql://dnd_user:dnd_password@db/dnd_srd_db
    volumes:
      - ../data:/app/data

  ready_check:
    image: busybox
    depends_on:
      - fastapi
    volumes:
      - ./wait-for-fastapi.sh:/wait-for-fastapi.sh
    command: ["/wait-for-fastapi.sh", "fastapi", "8000"]

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - fastapi

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=dnd_srd_db
      - POSTGRES_USER=dnd_user
      - POSTGRES_PASSWORD=dnd_password
    ports:
      - "5432:5432"

volumes:
  esdata:
  ollama_data:
  postgres_data:
